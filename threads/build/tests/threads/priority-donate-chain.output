Kernel command line: -q run priority-donate-chain
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
Boot complete.
Executing 'priority-donate-chain':
(priority-donate-chain) begin
(priority-donate-chain) main got lock.
(priority-donate-chain) main should have priority 3.  Actual priority: 0.
(priority-donate-chain) main should have priority 6.  Actual priority: 0.
(priority-donate-chain) main should have priority 9.  Actual priority: 0.
(priority-donate-chain) main should have priority 12.  Actual priority: 0.
(priority-donate-chain) main should have priority 15.  Actual priority: 0.
(priority-donate-chain) main should have priority 18.  Actual priority: 0.
(priority-donate-chain) main should have priority 21.  Actual priority: 0.
(priority-donate-chain) main finishing with priority 0.
(priority-donate-chain) end
Execution of 'priority-donate-chain' complete.
(priority-donate-chain) interloper 1 finished.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=8004209fd7
 cr2=0000000000000024 error=               0
rax 0000000000000024 rbx 0000000000000000 rcx 0000000000000000 rdx 0000008004000d70
rsp 0000008004236f50 rbp 0000008004236f70 rsi 0000008004000d70 rdi 0000000000000024
rip 0000008004209fd7 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x8004213403 0x8004208984 0x8004208d36 0x8004209d56 0x8004219762 0x80042073a7.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 28 ticks
Thread: 0 idle ticks, 28 kernel ticks, 0 user ticks
Console: 1